#include<iostream>
using namespace std;

class Node {
    public: 
    int data;
    Node* next;

    Node(int data) {
        this->data = data;
        this->next = NULL;
    }
};

class Queue {
    Node* head;
    Node* tail;

public: 
    Queue () {
        head = tail = NULL ;
    }
    void push (int data) {
        Node* newNode = new Node(data);
        if (head == NULL) {
            head = tail = newNode;
        } else {
            tail->next = newNode ;
            tail = newNode;
        }

    }

    void pop () {
        if (empty()) {
            cout<<"Queue is Empty"<<endl;
            return;
        }
        Node* temp = head;
        head = head->next;
        delete temp;

    }

    int front () {
        if (empty()) {
            cout<<"Queue is Empty"<<endl;
            return -1;
        }
        cout<<head->data<<endl;

    }

    bool empty () {
        if (head == NULL) {
            return true;
        }
        else {
            return false;
        }

    }
};

int main () {
    Queue q;

    q.push(1);
    q.push(2);
    q.push(3);
    q.push(4);
    q.pop();

    while(!q.empty()) {
        cout<<q.front() <<endl;
        q.pop();
    }
 return 0;
}
